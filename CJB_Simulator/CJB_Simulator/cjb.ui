<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>CJB</class>
 <widget class="QWidget" name="CJB">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1350</width>
    <height>635</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: rgb(255, 255, 255);</string>
  </property>
  <widget class="QTabWidget" name="tabWidget">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1350</width>
     <height>631</height>
    </rect>
   </property>
   <property name="iconSize">
    <size>
     <width>27</width>
     <height>25</height>
    </size>
   </property>
   <widget class="QWidget" name="tab">
    <attribute name="title">
     <string>Set 1</string>
    </attribute>
    <widget class="QGroupBox" name="groupBox">
     <property name="geometry">
      <rect>
       <x>15</x>
       <y>40</y>
       <width>1326</width>
       <height>551</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
     </property>
     <property name="title">
      <string/>
     </property>
     <widget class="QPushButton" name="pbHarness">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>301</width>
        <height>41</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>14</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
      </property>
      <property name="text">
       <string>Set 1</string>
      </property>
     </widget>
     <widget class="QLabel" name="lblPowerOn">
      <property name="geometry">
       <rect>
        <x>445</x>
        <y>10</y>
        <width>200</width>
        <height>40</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Roboto</family>
        <pointsize>13</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
background:rgb(234, 236, 247);
border-radius:5px;



</string>
      </property>
      <property name="text">
       <string>Power ON DI</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QGroupBox" name="groupBox_2">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>50</y>
        <width>648</width>
        <height>231</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    font: 12pt &quot;Roboto&quot;;
    border: 2px solid rgb(53,74,131);
    border-radius: 5px;
   font-weight: bold;
   margin-top: 1ex;
background:color rgb(150,160,186,80%);
}

QGroupBox::title {
    subcontrol-position: top center;
    color: rgb(53,74,131);
  margin-top: -6ex;
 
}
</string>
      </property>
      <property name="title">
       <string>24V</string>
      </property>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_2">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_106">
       <property name="geometry">
        <rect>
         <x>536</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO OFF</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>123</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-7</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO1">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI1">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>72</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-6</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_105">
       <property name="geometry">
        <rect>
         <x>420</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO ON</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_4">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_2">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>174</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-8</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_114">
       <property name="geometry">
        <rect>
         <x>214</x>
         <y>15</y>
         <width>172</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Continuity Error</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_2">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_3">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_2">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_103">
       <property name="geometry">
        <rect>
         <x>87</x>
         <y>15</y>
         <width>61</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>DI</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_3">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>285</y>
        <width>648</width>
        <height>231</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    font: 12pt &quot;Roboto&quot;;
    border: 2px solid rgb(53,74,131);
    border-radius: 5px;
   font-weight: bold;
   margin-top: 1ex;
background:color rgb(150,160,186,80%);
}

QGroupBox::title {
    subcontrol-position: top center;
    color: rgb(53,74,131);
  margin-top: -6ex;
 
}
</string>
      </property>
      <property name="title">
       <string>GND</string>
      </property>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_3">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_107">
       <property name="geometry">
        <rect>
         <x>536</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO OFF</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_4">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_3">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>123</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-10</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO1_2">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI1_2">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>72</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-9</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_108">
       <property name="geometry">
        <rect>
         <x>420</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO ON</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_5">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_3">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_4">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>174</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-11</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_115">
       <property name="geometry">
        <rect>
         <x>214</x>
         <y>15</y>
         <width>191</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Continuity Error</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_4">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_6">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_7">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_8">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_104">
       <property name="geometry">
        <rect>
         <x>87</x>
         <y>15</y>
         <width>61</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>DI</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_4">
      <property name="geometry">
       <rect>
        <x>667</x>
        <y>50</y>
        <width>648</width>
        <height>231</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    font: 12pt &quot;Roboto&quot;;
    border: 2px solid rgb(53,74,131);
    border-radius: 5px;
   font-weight: bold;
   margin-top: 1ex;
background:color rgb(150,160,186,80%);
}

QGroupBox::title {
    subcontrol-position: top center;
    color: rgb(53,74,131);
  margin-top: -6ex;
 
}
</string>
      </property>
      <property name="title">
       <string>24V</string>
      </property>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_5">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_109">
       <property name="geometry">
        <rect>
         <x>536</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO OFF</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_6">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_5">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>123</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-7</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO1_3">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI1_3">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>72</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-6</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_110">
       <property name="geometry">
        <rect>
         <x>420</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO ON</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_9">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_5">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_6">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>174</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-8</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_116">
       <property name="geometry">
        <rect>
         <x>214</x>
         <y>15</y>
         <width>172</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Continuity Error</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_6">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_10">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_11">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_12">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_111">
       <property name="geometry">
        <rect>
         <x>87</x>
         <y>15</y>
         <width>61</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>DI</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </widget>
     <widget class="QGroupBox" name="groupBox_5">
      <property name="geometry">
       <rect>
        <x>667</x>
        <y>285</y>
        <width>648</width>
        <height>231</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QGroupBox {
    font: 12pt &quot;Roboto&quot;;
    border: 2px solid rgb(53,74,131);
    border-radius: 5px;
   font-weight: bold;
   margin-top: 1ex;
background:color rgb(150,160,186,80%);
}

QGroupBox::title {
    subcontrol-position: top center;
    color: rgb(53,74,131);
  margin-top: -6ex;
 
}
</string>
      </property>
      <property name="title">
       <string>24V</string>
      </property>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_7">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_112">
       <property name="geometry">
        <rect>
         <x>536</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO OFF</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff_8">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_7">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>123</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-7</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO1_4">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>72</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI1_4">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>72</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-6</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_113">
       <property name="geometry">
        <rect>
         <x>420</x>
         <y>15</y>
         <width>81</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Force
DO ON</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_13">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_7">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="lblCorrectHDI2_8">
       <property name="geometry">
        <rect>
         <x>36</x>
         <y>174</y>
         <width>160</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>13</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
       </property>
       <property name="text">
        <string>JC05-8</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="label_117">
       <property name="geometry">
        <rect>
         <x>214</x>
         <y>15</y>
         <width>172</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>Continuity Error</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDO2_8">
       <property name="geometry">
        <rect>
         <x>284</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_14">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>174</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_15">
       <property name="geometry">
        <rect>
         <x>561</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff_16">
       <property name="geometry">
        <rect>
         <x>445</x>
         <y>123</y>
         <width>31</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>-1</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
      </widget>
      <widget class="QLabel" name="label_118">
       <property name="geometry">
        <rect>
         <x>87</x>
         <y>15</y>
         <width>61</width>
         <height>46</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>Roboto</family>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
       </property>
       <property name="text">
        <string>DI</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </widget>
     <zorder>pbHarness</zorder>
     <zorder>lblPowerOn</zorder>
     <zorder>tabWidget</zorder>
     <zorder>groupBox_2</zorder>
     <zorder>groupBox_3</zorder>
     <zorder>groupBox_4</zorder>
     <zorder>groupBox_5</zorder>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_2">
    <attribute name="title">
     <string>Tab 2</string>
    </attribute>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
